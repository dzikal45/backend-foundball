{"version":3,"file":"get-week-number.spec.js","sourceRoot":"","sources":["../../../../src/__tests__/calendar/helpers/get-week-number.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import type { WeekNumberType } from '../../../calendar/calendar_typing.js';\nimport { getWeekNumber } from '../../../calendar/index.js';\n\ntype TestError = [string, [undefined | null, undefined | null]];\ntest.each<TestError>([\n  [`void, void`, [void 0, void 0]],\n  [`void, null`, [void 0, null]],\n  [`null, void`, [null, void 0]],\n  [`null, null`, [null, null]],\n])(`week number (%s)`, (_, a) => {\n  try {\n    getWeekNumber(...(a as [never, never]));\n  } catch (e) {\n    expect(e.name).toStrictEqual(TypeError.name);\n    expect(e.message).toMatch('Cannot read property');\n  }\n});\n\ntype TestSuccess = [string, [number, number, number, number]];\ntest.each<TestSuccess>([\n  ['2010-01-01', [52, 1, 52, 1]],\n  ['2011-01-01', [52, 1, 52, 1]],\n  ['2012-01-01', [1,  1,  1, 1]],\n  ['2013-01-01', [53, 1,  1, 1]],\n  ['2014-01-01', [52, 1,  1, 1]],\n  ['2015-01-01', [52, 1, 53, 1]],\n  ['2016-01-01', [52, 1, 52, 1]],\n  ['2017-01-01', [1,  1,  1, 1]],\n  ['2018-01-01', [53, 1,  1, 1]],\n  ['2019-01-01', [52, 1,  1, 1]],\n  ['2020-01-01', [52, 1,  1, 1]],\n\n  ['2010-12-31', [52,  1, 52, 53]],\n  ['2011-12-31', [52, 53, 52, 53]],\n  ['2012-12-31', [53,  1,  1, 53]],\n  ['2013-12-31', [52,  1,  1, 53]],\n  ['2014-12-31', [52,  1, 53, 53]],\n  ['2015-12-31', [52,  1, 52, 53]],\n  ['2016-12-31', [52, 53, 52, 53]],\n  ['2017-12-31', [53,  1,  1, 53]],\n  ['2018-12-31', [52,  1,  1, 53]],\n  ['2019-12-31', [52,  1,  1, 53]],\n  ['2020-12-31', [52,  1, 53, 53]],\n])(`week number (%s, ...)`, (a, expected) => {\n  const d = (\n    [\n      'first-full-week',\n      'first-day-of-year',\n      'first-4-day-week',\n      null,\n    ] as WeekNumberType[]\n  ).map(n => getWeekNumber(n, new Date(a)));\n\n  expect(d).toEqual(expected);\n});\n"]}