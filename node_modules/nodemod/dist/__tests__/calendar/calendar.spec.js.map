{"version":3,"file":"calendar.spec.js","sourceRoot":"","sources":["../../../src/__tests__/calendar/calendar.spec.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AAGvD,IAAI,CAAC,IAAI,CAAY;IACnB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAChB,CAAC,MAAM,EAAE,IAAI,CAAC;CACf,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IAC3B,IAAI;QACF,QAAQ,CAAC,CAAU,CAAC,CAAC;KACtB;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC7C,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;KAC7C;AACH,CAAC,CAAC,CAAC;AAGH,IAAI,CAAC,IAAI,CAAc,gBAAgB,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE;IAC1E,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAEtB,MAAM,CAAC;QACL,GAAG,CAAC;QACJ,QAAQ,EAAE;YACR,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACb,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACd;KACF,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC","sourcesContent":["import type { Calendar, CalendarOptions } from '../../calendar/calendar_typing.js';\nimport { calendar } from '../../calendar/index.js';\nimport { mockCalendarData } from './mocks/calendar.js';\n\ntype TestError = [string, undefined | null];\ntest.each<TestError>([\n  [`void`, void 0],\n  [`null`, null],\n])(`calendar (%s)`, (_, a) => {\n  try {\n    calendar(a as never);\n  } catch (e) {\n    expect(e.name).toStrictEqual(TypeError.name);\n    expect(e.message).toMatch('getUTCFullYear');\n  }\n});\n\ntype TestSuccess = [string, CalendarOptions, Calendar];\ntest.each<TestSuccess>(mockCalendarData)(`calendar(%s)`, (_, a, expected) => {\n  const d = calendar(a);\n\n  expect({\n    ...d,\n    calendar: [\n      d.calendar[0],\n      d.calendar[4],\n      d.calendar[5],\n    ],\n  }).toEqual(expected);\n});\n"]}