{"version":3,"file":"encrypt.spec.js","sourceRoot":"","sources":["../../../src/__tests__/scryptify/encrypt.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,0BAA0B,CAAC;AACnD,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AAEjD,IAAI,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;IAClC,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAEjD,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;IAC1D,MAAM,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;IAC/B,MAAM,GAAG,GAAG,GAAG,CAAC;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACjD,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAEzB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC","sourcesContent":["import { encrypt } from '../../scryptify/index.js';\nimport { rawData, secret } from './CONSTANTS.js';\n\ntest('encryption works', async () => {\n  const encrypted = await encrypt(rawData, secret);\n\n  expect(encrypted).toMatch(/^([a-z\\d]+):(?:[a-z\\d]+)$/i);\n});\n\ntest('encryption always produces unique output', async () => {\n  const encryptedSet = new Set();\n  const len = 1e4;\n  const tasks = Array.from(Array(len), async () => {\n    const encrypted = await encrypt(rawData, secret);\n    encryptedSet.add(encrypted);\n  });\n\n  await Promise.all(tasks);\n\n  expect(encryptedSet.size).toStrictEqual(len);\n});\n"]}