{"version":3,"file":"polling-observer.spec.js","sourceRoot":"","sources":["../../../src/__tests__/polling-observer/polling-observer.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { PollingObserver } from '../../polling-observer/index.js';\nimport type { OnfinishFulfilled, PollingMeasure } from '../../polling-observer/index.js';\nimport './setup.js';\nimport type { MockData } from './test_typings.js';\n\nit(`finishes polling with condition fulfills`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(d => Boolean(d && d.items.length > 0));\n  obs.observe(\n    async () => {\n      return new Promise<MockData>((resolve) => {\n        setTimeout(() => resolve(data), 2e3);\n      });\n    },\n    { interval: 1e3, timeout: 5e3 });\n\n  obs.onfinish = (d) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('finish');\n    expect(value).toStrictEqual({ ...data });\n    done();\n  };\n}, 10e3);\n\nit(`timeouts a polling`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(() => false);\n  obs.observe(\n    async () => {\n      return new Promise<MockData>(resolve => setTimeout(() => resolve(data), 7e3));\n    },\n    { interval: 1e3, timeout: 5e3 });\n\n  obs.onfinish = (d) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('timeout');\n    expect(value).toStrictEqual({ ...data });\n    done();\n  };\n}, 10e3);\n\nit(`timeouts a polling with > 1 repeat`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(() => false);\n  obs.observe(\n    async () => {\n      /**\n       * NOTE(motss): The promise resolves after 1s timeout and the next run will be\n       * scheduled to happen in roughly (1e3 - 1) milliseconds.\n       */\n      return new Promise<MockData>(resolve => setTimeout(() => resolve(data), 1));\n    },\n    { interval: 1e3, timeout: 5e3 });\n\n  obs.onfinish = (d) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('timeout');\n    expect(value).toStrictEqual({ ...data });\n    done();\n  };\n}, 10e3);\n\nit(`reads records when polling finishes`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(() => false);\n  obs.observe(\n    async () => {\n      return new Promise<MockData>(resolve => setTimeout(() => resolve(data), 1));\n    },\n    { interval: 1e3, timeout: 5e3 });\n\n  obs.onfinish = (d, records) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('timeout');\n    expect(value).toStrictEqual({ ...data });\n    expect(records.length).toBeGreaterThan(1);\n    expect(records[0].toJSON()).toMatchObject({\n      duration: expect.any(Number),\n      entryType: expect.stringMatching('polling-measure'),\n      name: expect.stringMatching(/^polling:\\d+/gi),\n      startTime: expect.any(Number),\n    } as PollingMeasure);\n    expect(obs.takeRecords().length).toBeGreaterThan(1);\n    expect(obs.takeRecords()[0].toJSON()).toMatchObject({\n      duration: expect.any(Number),\n      entryType: expect.stringMatching('polling-measure'),\n      name: expect.stringMatching(/^polling:\\d+/gi),\n      startTime: expect.any(Number),\n    } as PollingMeasure);\n    done();\n  };\n}, 10e3);\n\nit(`clears records when observer disconnects`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(() => false);\n  obs.observe(\n    async () => {\n      return new Promise<MockData>(resolve => setTimeout(() => resolve(data), 1));\n    },\n    { interval: 1e3, timeout: 5e3 });\n\n  obs.onfinish = (d, records) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('timeout');\n    expect(value).toStrictEqual({ ...data });\n    expect(records.length).toBeGreaterThan(1);\n    expect(obs.takeRecords().length).toBeGreaterThan(1);\n\n    obs.disconnect();\n\n    expect(obs.takeRecords().length).toBeLessThan(1);\n    done();\n  };\n}, 10e3);\n\nit(`forces polling to stop by disconnecting the observer`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(() => {\n    /**\n     * NOTE(motss): Disconnect observer after 1st polling.\n     */\n    obs.disconnect();\n    return false;\n  });\n\n  obs.observe(\n    async () => {\n      return new Promise<MockData>(resolve => setTimeout(() => resolve(data), 1));\n    },\n    { interval: 2e3, timeout: 5e3 });\n\n  obs.onfinish = (d, records) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('finish');\n    expect(value).toStrictEqual({ ...data });\n    expect(records.length).toStrictEqual(1);\n    expect(obs.takeRecords().length).toStrictEqual(0);\n    done();\n  };\n}, 10e3);\n\nit(`disconnects observer before first polling initiates`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(() => false);\n\n  obs.observe(\n    async () => {\n      return new Promise<MockData>(resolve => setTimeout(() => resolve(data), 1));\n    },\n    { interval: 2e3, timeout: 5e3 });\n\n  obs.onfinish = (d, records) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('finish');\n    expect(value).toStrictEqual(undefined);\n    expect(records).toStrictEqual([]);\n    expect(obs.takeRecords()).toStrictEqual([]);\n    done();\n  };\n\n  obs.disconnect();\n}, 10e3);\n\nit(`re-observes after disconnected`, async (done) => {\n  const getMockData = (): MockData => ({ items: [Math.floor(Math.random() * Math.PI)] });\n  const pollingFn = (d: MockData) => async () => {\n    return new Promise<MockData>(resolve => setTimeout(() => resolve(d), 1));\n  };\n\n  const obs = new PollingObserver<MockData>(() => false);\n  const pollingOpts = { interval: 1e3, timeout: 3e3 };\n\n  await new Promise<void>((resolve) => {\n    const mockData = getMockData();\n\n    obs.onfinish = (d, records) => {\n      const { status, value } = d as OnfinishFulfilled<MockData>;\n\n      expect(status).toStrictEqual('timeout');\n      expect(value).toStrictEqual({ ...mockData });\n      expect(records.length).toBeGreaterThan(1);\n      expect(obs.takeRecords().length).toBeGreaterThan(1);\n      resolve();\n    };\n    obs.observe(pollingFn(mockData), pollingOpts);\n  });\n\n  obs.disconnect();\n  expect(obs.takeRecords().length).toBeLessThan(1);\n\n  await new Promise<void>((resolve) => {\n    const mockData2 = getMockData();\n\n    obs.onfinish = (d, records) => {\n      const { status, value } = d as OnfinishFulfilled<MockData>;\n\n      expect(status).toStrictEqual('timeout');\n      expect(value).toStrictEqual({ ...mockData2 });\n      expect(records.length).toBeGreaterThan(1);\n      expect(obs.takeRecords().length).toBeGreaterThan(1);\n      resolve();\n    };\n    obs.observe(pollingFn(mockData2), pollingOpts);\n  });\n\n  done();\n}, 10e3);\n\nit(`polls with optional 'interval'`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(() => false);\n\n  obs.observe(\n    async () => {\n      return new Promise<MockData>(resolve => setTimeout(() => resolve(data), 1));\n    },\n    { timeout: 5e3 });\n\n  obs.onfinish = (d) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('timeout');\n    expect(value).toStrictEqual({ ...data });\n    expect(obs.takeRecords().length).toBeGreaterThan(1);\n    done();\n  };\n}, 10e3);\n\nit(`polls with optional 'timeout'`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const startsAt = +new Date();\n  const obs = new PollingObserver<MockData>(() => {\n    /** NOTE(motss): It still needs to be stopped to pass the test */\n    const endsAt = +new Date();\n    return Math.floor(endsAt - startsAt) > 5e3;\n  });\n\n  obs.observe(\n    async () => {\n      return new Promise<MockData>(resolve => setTimeout(() => resolve(data), 1));\n    },\n    { interval: 2e3 });\n\n  obs.onfinish = (d, records) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('finish');\n    expect(value).toStrictEqual({ ...data });\n    expect(records.length).toBeGreaterThan(1);\n    expect(obs.takeRecords().length).toBeGreaterThan(1);\n    done();\n  };\n}, 10e3);\n\nit(`polls with optional 'options'`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const startsAt = +new Date();\n  const obs = new PollingObserver<MockData>(() => {\n    /** NOTE(motss): It still needs to be stopped to pass the test */\n    const endsAt = +new Date();\n    return Math.floor(endsAt - startsAt) > 5e3;\n  });\n\n  obs.observe(\n    async () => {\n      return new Promise<MockData>(resolve => setTimeout(() => resolve(data), 1));\n    });\n\n  obs.onfinish = (d, records) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('finish');\n    expect(value).toStrictEqual({ ...data });\n    expect(records.length).toBeGreaterThan(1);\n    expect(obs.takeRecords().length).toBeGreaterThan(1);\n    done();\n  };\n}, 10e3);\n\nit(`polls with async 'conditionCallback'`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(async () => false);\n\n  obs.observe(\n    async () => {\n      return new Promise<MockData>(resolve => setTimeout(() => resolve(data), 1));\n    },\n    { interval: 2e3, timeout: 5e3 });\n\n  obs.onfinish = (d, records) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('timeout');\n    expect(value).toStrictEqual({ ...data });\n    expect(records.length).toBeGreaterThan(1);\n    expect(obs.takeRecords().length).toBeGreaterThan(1);\n    done();\n  };\n}, 10e3);\n\nit(`polls with non-async 'callback'`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(async () => false);\n\n  obs.observe(() => data, { interval: 2e3, timeout: 5e3 });\n\n  obs.onfinish = (d, records) => {\n    const { status, value } = d as OnfinishFulfilled<MockData>;\n\n    expect(status).toStrictEqual('timeout');\n    expect(value).toStrictEqual({ ...data });\n    expect(records.length).toBeGreaterThan(1);\n    expect(obs.takeRecords().length).toBeGreaterThan(1);\n    done();\n  };\n}, 8e3);\n\nit(`polls without 'onfinish' callback`, (done) => {\n  const data: MockData = { items: [Math.floor(Math.random() * Math.PI)] };\n  const obs = new PollingObserver<MockData>(async () => false);\n\n  setTimeout(() => {\n    expect(obs.takeRecords().length).toBeGreaterThan(1);\n    done();\n  }, 8e3);\n\n  obs.observe(() => data, { interval: 2e3, timeout: 5e3 });\n\n  expect(obs.takeRecords().length).toBeLessThan(1);\n}, 10e3);\n"]}